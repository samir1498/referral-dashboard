"use server";

import { TestimonialRepositoryDrizzle } from "@/infrastructure/repositories/TestimonialRepositoryDrizzle";
import { Testimonial } from "@/domain/entities/Testimonial";
import { revalidatePath } from "next/cache";

const testimonialRepository = new TestimonialRepositoryDrizzle();

export async function getTestimonials() {
  const testimonials = await testimonialRepository.findAll();
  return testimonials.map((testimonial) => ({
    id: testimonial.id,
    name: testimonial.name,
    company: testimonial.company,
    testimonial: testimonial.testimonial,
    avatar: testimonial.avatar,
  }));
}

export async function addTestimonial(testimonialData: {
  name: string;
  company: string;
  testimonial: string;
  avatar?: string;
}) {
  const testimonial = new Testimonial(
    "", // ID will be generated by the database
    testimonialData.name,
    testimonialData.company,
    testimonialData.testimonial,
    testimonialData.avatar
  );
  await testimonialRepository.add(testimonial);
  revalidatePath("/dashboard/testimonials");
}

export async function editTestimonial(testimonialData: {
  id: string;
  name: string;
  company: string;
  testimonial: string;
  avatar?: string;
}) {
  const testimonial = new Testimonial(
    testimonialData.id,
    testimonialData.name,
    testimonialData.company,
    testimonialData.testimonial,
    testimonialData.avatar
  );
  await testimonialRepository.update(testimonial);
  revalidatePath("/dashboard/testimonials");
}

export async function deleteTestimonial(id: string) {
  await testimonialRepository.delete(id);
  revalidatePath("/dashboard/testimonials");
}